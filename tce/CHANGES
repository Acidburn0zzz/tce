1.4 not yet released
====================

Code generator improvements
---------------------------
- Passes the first function parameter in register instead of stack.

Optimizations
-------------
- tcecc: Decreased scheduling time.
- tcecc: Decreased memory usage.

Usability features
------------------
- tcecc: Reasonable error message if disk space runs out during TPEF writing.
- ttasim: Refuses to simulate a program that moves a too wide immediate to 
  a too narrow jump/PC port in the control unit. It would result in wrong
  execution as it jumps to a clipped address.
- ProDe: Scroll position is kept when zooming.
- In case of memory access alignment error, prints the address.

Bugfixes
--------
- Prode: Shows the machine which is being edited immediately also with
  WxWidgets 2.8
- Prode: When some editing command is cancelled, and nothing is changed, 
  the machine is not marked as modified so ProDe does not want to save it.
- ttasim: when the last instruction executed was a jump and the
  simulation was killed (reseted), the jump was executed in the 
  new simulation.
- ProGe: Some FUs had unnecessary 'SHIFTW' parameters in the default HDB
  causing broken top level VHDL to be generated. Fixed by Jani Boutellier of 
  University of Oulu.

1.3    November 2010
====================

Notable new features
--------------------
- Support for LLVM 2.8 (support for LLVM 2.7 retained)
- ttasim: call info (setting profile_transfer_tracking) and the instruction
  profile (ttasim setting profile_data_saving) are now saved to separate
  pure text files to speed up simulation when these traces are enabled.
- ttasim: instruction profile can be converted to cachegrind-compatible 
  traces which can be visualized with kcachegrind.
- SystemC integration: Possibility to add TTA simulation models to system
  level simulations with the ability to override the operation pipeline 
  simulation models for the function units.
- Improved the scheduling for unconnected machines through temporary
  register copies based on the maze algorithm for ASIC place & route.
  Not restricted to maximum of two copies anymore.
- Basic support for debugging info when compiled with 'tcecc -g'. 
  The source code line numbers are displayed as comments in 'tcedisasm' 
  output and ttasim's disassembly.
- Platform Integration support is improved. New integrator components
  include AvalonIntegrator which can be used to integrate TTA to a
  Altera SOPC Builder component and KoskiIntegrator which can be used
  to integrate TTA processor to Koski toolset compatible IP blocks with
  IP-XACT 1.2 component description file.

Code generator improvements
---------------------------
- New register assignment strategy that avoids reuse of registers to
  produce more ILP for the post-pass scheduler.
- Improved code generation for comparisons of boolean values.
- Avoids putting immediate value into register with some comparisons,
  more often passes the immediate directly to the comparison operation.

Usability features
------------------
- ProDe: when copying a load-store unit (FU), also copies the address 
  space parameter.

Bugfixes
--------
- tcecc: stdout/stderr redirection was broken for running subcommands
  and caused occasional false failures.
- tcecc: sometimes generated incorrect code when there was a jump to 
  llvm select instruction (usually c/c++ ?-operator).
- ttasim: In compiling mode value written to memory sometimes appeared
  to load operations triggered at same cycle. Those should read
  the old value from the memory.

Optimizations
-------------
- ttasim: destruction was extremely slow after simulating large
  programs due to extremely slow destructor of InstructionMemory
- tcecc: Decreased scheduling time.

Misc
----
- ttasim: removed support for simulating the experimental 'sequential
  TTA programs'. Sequential a.out programs was the intermediate representation 
  from the old (now unsupported) gcc 2.7.0 compiler frontend.

Known problems
--------------
- LLVM 2.8 has a bug which may cause incorrectly compiled programs when
  the is a comparison of (only) lowest bits of integers in the code 
  being compiled.
  A patch for this bug is included in TCE release, it should be applied
  to the LLVM source tree and LLVM recompiled and reinstalled with the patch.
  LLVM 2.7 might also be affected, but we have not seen the bug appear with
  LLVM 2.7.
- Clang has a bug related to code generation of bitfields, illegal
  code may be generated if the code contains bitfield and clang is used 
  as C frontend (which is the default). This bug appears with libmad.
  See http://llvm.org/bugs/show_bug.cgi?id=8171 for the bug report.
  
1.2    June 2010
================

New features
------------
- Support for LLVM 2.7 (dropped support for LLVM 2.6)
- Proper support for Clang. Clang now the default compiler frontend
  in tcecc.
- Preliminary support for automated platform integration. 
  First supported platform is the Stratix II DSP board.
- Added parameter --no-fp-emu to tcecc. This parameter disables 
  linking any floating point emulation code. It can be used to
  make the compiled program smaller in the case the dead code 
  elimination fails to remove unused FP code.
- Added parameter --conservative-pre-ra-scheduler which leads to 
  faster schedule with machines with low amount of registers but usually
  decreases performance with machines with lots of registers.

Bugfixes
--------
- sqrt() calls are now correctly converted to SQRTF operations
  only in case the operation is supported by the ADF, otherwise
  to emulation function calls.
- tcecc: compilation warnings and errors are now always output to
  stderr unbuffered (used to output only in case of compilation error)
- Data alignment rules of data types fixed to be same in backend
  and frontend. 
- Compiled simulation does not handle long guard latencies,
  implemented fallback to the interpreted engine when simulating 
  machines which have long guard latencies.
- Multi-bit registers can no longer be used as boolean registers by the 
  compiler; support for them was buggy and using them could cause incorrectly
  scheduled programs. Now every machine has to have at least 2 one-bit
  registers which are used for guards(predicates) and boolean values.

1.1 unreleased
==============

This version was never released as tar balls, but can be only 
checked out from the version control system.

New features
------------
- Support for LLVM 2.6 (dropped support for LLVM 2.5)
- Sign extension operations are not required anymore.
- Program Image Generator supports MIF-format (Memory
  Initialization File) used by Altera.
- ttasim-tandem: a tool for comparing the two simulation engines
  to assist in tracking simulation bugs.
- Operation code numbering guideline changed. Operation codes should be
  numbered according to the their alphabetical order. HDBEditor and ProGe
  issue a warning message if this convention is violated.
- tcecc: added a switch for setting the llvm-gcc optimization level
- Program Image Generator supports writing binary image to vhdl package
- Program Image Generator has (experimental) support for COE image files
- a helper script 'minimize-ic' for invoking the SimpleICOptimizer
  explorer plugin
- support for using the Clang as the C frontend via 'tcecc --clang'.
  NOTE: Clang 1.0 (released with LLVM 2.6) needs to be patched with
  tools/patches/clang-1.0-tce-support.patch for the TCE support.
- Utility programs to test that OSAL behaviour definitions and HDL
  implementations of function units are equal.
  - testhdb command line tool to test FU and RF implementations in HDB
  - ttaunittester to test the FUs and RFs implementations defined in IDF
- ProDe: when copying a bus, also copy its guards
- PIG now automatically copies memory images to ${proge-output}/tb directory
  if image type is ascii and -x flag is given.

Code optimizations
------------------
- Decreased scheduling time for big programs. 
  Unfortunately compiling time increased for small programs.
- Smarter heuristics for selecting which bus and FU to use, leads to
  programs which use fever connections, allowing more of them to be
  removed.
- Eliminates some stupid register to itself moves.

Bugfixes
--------
- rand() might now return something else than 0
- Scheduler could fail on machines with different short immediate widths
  and only some busses guarded.
- Random scheduler failures when software bypassing.
- Operations with state on machines with trigger bound to operand which is
  not last operand could be scheduled incorrectly.
- SimpleICOptimizer explorer plugin could remove connections that were used,
  resulting a machine where the code does not work.
- Instruction fetcher failed to fetch correct instruction when global lock
  signal was asserted.
- Better support for selecting custom ops with DAG definition.
- Having not operation on the machine caused incorrectly compiled programs.
- Better error handling for stale .opb files.
- Boost should not warn anymore about deprecated hash_set with gcc 4.3.
- Having lots of parallelism and easily analyzable memory addresses could
  cause incorrectly compiled programs.
- ttasim -q: could fail if some result is never read.
- ttasim -q: fixed wrong simulation of instructions with predicate moves
  and the same predicate written at the same cycle
- Simulator could fail to load some programs.
- Memory leak fixes.
- Toplevel busy signal now locks the core properly.
- Compiled simulator failed to simulate custom memory writing operations
  correctly.
- FU outputs are now updated when the compiled simulation is stopped to
  make the machine state correct for inspection.
- Avoids placing data at address 0 because it is indistinguishable from NULL.
- Operand type initialized correctly in osed operand editing dialog.
- Direct memory accesses to global tables could get wrong address.
- ProDe: segments cannot be selected anymore (selects the bus always instead),
  an irritating long standing bug.
- Proxim: crashed when unable the load the program due to missing
  operation simulation models.
- Missing .opb file no longer causes ttasim to go to forever loop,
  now exits with a meaningful error message.
- LIMM write to IU works if glock is issued on the same cycle
  
1.0 first public release, 2009-03-26
====================================

New features
------------
- Support for LLVM 2.5 (dropped support for LLVM 2.4).

Code optimizations
--------------------------
- Decreased scheduling time

Code generator improvements
----------------------------
- Creates slightly faster emulation code for comparion operations 
  which are missing from the machine.
- Improved schedule for reduced connectivity machines.

Bug fixes
---------
- Compiling simulator simulated some dag-specified operations incorrectly
  and sometimes failed to generate code to some.
- Fixed a bug which caused random scheduler failures.

1.0-beta2     2008-11-13
========================

New features
------------
- Support for LLVM 2.4 (dropped support for LLVM 2.3).
- Explorer can now print available plugins with "-g" option switch.
- Explorer can now print plugin parameters with "-p <plugin name>" switch.
- Simulator's x (dump memory) command can now dump memory to a binary file
  with switch /f
- Added --unroll-threshold switch to tcecc to control the aggressiveness
  of the loop unrolling.

Code optimizations
------------------
- Optimized the time spent in loading of program to the simulator.
- Optimized the time to write program to tpef file.
- Scheduling big programs should be much faster.
- Scheduler memory usage should be less

Bug fixes
---------
- Fixed a bug which caused random scheduler failures.
- Dropped support for Boost 1.32 as it has some bad bugs, at least 1.33 required
- ProDe: crash when "fully connecting" unconnected RF ports fixed. 
- The compiler backend plugins now contain the TCE version string in
  the file name to avoid problems with incompatible backend versions
  in TCE version upgrades.
- custom operation sometimes got reordered illegally.

Documentation
-------------
- Added proper documentation on marking the state properties of
  operations sharing the same state (side-effects, affected-by, affects)
  to the user manual.

1.0-beta1     2008-10-02
========================

New features
------------

- Upgraded the compiler to use LLVM 2.3 (support for LLVM 2.2 dropped).
- Added support for FU resource conflict detection to the compiled
  simulator engine.
- Implemented processor utilization stats to the compiled simulator
  engine.
- Added 'clocked' attribute to the operation definitions that depend
  on the processor clock signal (mainly real time clocks etc.).
- Added example stream operations to the base opset and documented them in
  the TCE User Manual's tutorial section.
- Constant support for the OSAL DAG language.
- Added support for dynamic compiled simulation. Static compiled simulation
  is still used by default.
- Fixed TCE to compile and pass tests with Ubuntu 6.06 LTS (Dapper).
- Lots of work on automatic and manual design space exploration tools.
- New sequential scheduler which minimizes scheduling time and helps
  to isolate compilation bugs between LLVM and TCE. 
  Invoke with 'tcecc -O0'.
- SimpleICOptimizer Explorer plugin now has a switch to preserve the minimal
  opset.
- Evaluate Explorer plugin added to easily evaluate configurations.
- MinimalOpSet Explorer plugin added to check machines against the minimal
  opset.

Bug fixes
---------
- Workaround for an ICE that happened with LLVM-GCC inlining.
- Bug #14: Tcl 8.5 has a problem with stack size detection which caused Proxim's
  script interpreter to fail (see Bug #14). Removed support for Tcl 8.5 for
  now. Use Tcl 8.0-8.4 until Tcl 8.5 has fixed this issue properly.
- Bug #35: add explicit casts to the OSAL operand types in the _TCE_*()
  macros generated by tceopgen
- Fixed a bug when generating code for guarded jumps in compiled
  simulator.
- Determinism fixes to the instruction scheduler.  
- Optimized scheduling of long immediates. Speeds up scheduling up to
  50% for some cases.
- Got rid of compile warnings on Ubuntu 8.10 (Intrepid Ibex).

1.0-alpha1    2008-05-06
========================

The first preview release for co-op universities and companies.
