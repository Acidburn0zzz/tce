1.6       unreleased
====================

Usability features
------------------
- dumptpef -m has now more user friendly output. 
- OSAL files are searched also from environment variable TCE_OSAL_PATH

Smaller features
----------------
- OSAL.hh: FU_NAME macro for accessing the name of the function
  unit the operation is executed in. The standard STREAM operations
  now use filenames FU_NAME.in and FU_NAME.out instead of the fixed
  names. This allows easier simulation of TTAs with multiple 
  I/O FUs. By Jani Boutellier from University of Oulu.

Code generator improvements
---------------------------
- Immediates marked as rematerializable; This should reduce spilling as
  values that come from immediates are not spilled to stack.
- Registers can now be renamed to different RF during scheduling.
  This is however not yet used to reduce number of register-to-registe copies
  on sparsely connected machines.
- Added experimental support for combining multiple TCE registers into 
  vector registers, and emiting incoming llvm vector instructions using these.
  Allows using wide loads (ldw2, ldw4, ldw4) and stores(stw2, stw4, stw8)
  to load and store these vectors. This can be enabled with parameter
  --vector backend. This feature requires certain register file names,
  generated with ADFCombiner explorer plugin. 
  This feature does not work with llvm-3.0.
- Added experimental bottom-up-instruction scheduler. Can be enabled with
  --bottom-up-scheduler command line parameter.
- Compiler can now make floating point values to be loaded from
  immediates instead of always putting them to constant pool.

Bugfixes
--------
- tcecc: Missing antidependence edges could cause broken schedule when
  bypasser used on partially connected machines.
- ttasim: Try to simulate machines with unconnected ports (only a warning
  is printed in such cases). 
- tcecc: some scheduling errors didn't fail gracefully
  https://bugs.launchpad.net/tce/+bug/894816
- hdb: fpu_sp_mul.vhdl didn't freeze the pipeline with glock
  https://bugs.launchpad.net/tce/+bug/942551
- Removed one broken fu architecture from hdb;
  There was no implementation for it anyway
- ttasim: In compiling mode failed to generate simulation code for
  operation with some dags.

1.5    December 2011
====================

Notable changes and features
----------------------------
- Support for LLVM 3.0. 
  LLVM 2.9 might still work but is unsupported.
  Dropped support for LLVM 2.8 and older. 
- Experimental OpenCL C Embedded Profile support in offline compilation 
  mode (we call it the OpenCL "standalone mode").
- tcecc: Floating point emulation code is not included by default anymore,
  use --swfp in case you use floating points and your machine does
  not support them.
- bclib: added a Light Weight PRinting library. Small functions useful
  for debug printouts.
- Support for calling custom operations to be executed in specified 
  function unit (e.g. _TCEFU_ADD("ALU8", A1_Cb, A1_Cr, result2)).
  Thanks to Hervé Yviquel for the patch.
- Generalizations to the architecture description format to allow
  using the instruction scheduler for operation triggered architectures. 
  The Cell SPU is the proof of the concept architecture which can be
  scheduled for out-of-the-box with LLVM 3.0 (see tcecc-spu).    

Bugfixes
--------
- HDB: Hardware bug fix for load-store units in hibi_adapter.hdb and 
  stratixII.hdb.
  Global lock signal might cause pipelined load result to be ignored.
- tcecc: Scheduler could sometimes fail to schedule on sparsely connected 
  machines.
- OSEd: OSEd crashed when selecting an operation for which there was no 
  simulation model in an otherwise valid .opb.
- OSEd: Reload modified simulation functions from a rebuilt simulation
  function module (.opb) (Bug 179).
- OSEd: Renaming an operation might cause osed to crash.
- OSEd: Checking of operation with same name already exists was broken.
- OSEd: When new operation is created, the DAG can now be edited immediately
  without false error messages about missing outputs.
- ProDe: Bit width calculation of address spaces was incorrect if max-address
  was power of 2.
- tcecc: standard libcalls are now converted to cheaper ones again using
  the llvm -simplify-libcalls (e.g. printf("foo\n") -> puts("foo").
  This was broken due to adding -fno-libcall switch as default. Now it's
  added only while building Newlib.
- Build system: Fixed build when --as-needed is used as link flag by some of 
  the libraries.
- 1-bit global constants had invalid size calculation. This could cause
  compiler to fail to write program.
- tcedisasm: the starting address of data section initialization
  output was computed wrongly.
- generatebits: MIF data image output had a rounding error which led to
  missing data words at the end of image in case the number of words was
  not divisible with the row width.
- OSAL DAG language had broken illegal recursive dag detection, which
  resulted some legal DAG's not to be used. This happened in cases
  where same operation was used multiple times inside a dag.
- OSAL: Added check of operation DAGs which do not write to some output
  operand. Refuse to load this kind of broken DAGs.
- OSAL DAG language could not recursively use smaller patterns as
  part of bigger patterns in instruction selection.
- tcecc: fail with an error in case the compiled program uses dynamic
  stack objects (not yet supported by tcecc) instead of silently 
  producing invalid code.
- Do not save the backend plugins to disk while running the design
  space exploration. This caused disk space fillup with long explorations
  and small hard disks.
- Proxim: clicking OK on the options dialog crashed Proxim in case a simulation
  was not initialized.
- ProDe: fixed a crash when checking programmability on a machine with more 
  than 1 boolean registers/no boolean register files.
- tcecc: On some platforms an exception thrown when a symbol (usually a
  from a call to a function not linked in) crashes at LLVM/TCE library
  boundaries. Moved the exception handling closer to the call position
  to produce a graceful error message printout for this case.
- Proxim: the configuration file was not saved to the correct location in
  the user home dir.
- tcecc: fixed an issue compiling multiple source code in the same
  command line with the same basename (but with a different suffix or
  directory).

Code generator improvements
---------------------------
- Introduced jump with negative guard to llvm. This makes llvm's
  BranchFolding pass to generate more sane CFGs, and should result
  in slightly better code being generated.
- Can rename registers during scheduling
- Does not save return address to stack in leaf functions.
- Alias analysis of LLVM is now exploited in DDG building to improve 
  parallelization.
- TCE instruction scheduler CFG is now generated directly from the LLVM CFG.
  The old "builder" that builds the TCE CFG from a "flat" program 
  representation can still be used with --old-builder parameter, but this 
  disables also some other new features and will be removed in the next 
  TCE release.
- A major reorganization of the phases in the compiler backend. The memory 
  consumption of the compiler should be now smaller, but compile time for 
  small programs longer. NOTE: The old scheduler configuration system is now
  deprecated (not used with the default tcecc options) and will be removed in
  the next release. 

Smaller features
----------------
- ProGe: switch -s that can be used to define a separate directory for
  files that are potentially shared between multiple TTA processors in
  the same (heterogeneous) TTA multicore design.
- ProGe and PIG: the string given with --entity-name is now used to make
  the generated VHDL entity etc. names unique to allow easier
  instantiation of multiple TTA cores in designs.
- tcecc: support for LLVM assembly files (.ll) as input. 
  Thanks to Hervé Yviquel for the patch.
- ProGe: test bench generation is now disabled by default, use '-t'
  to generate the test bench.
  Thanks to Hervé Yviquel for the patch.
- ProGe: HDL-file compilation order in Modelsim compilation script is
  now fixed. Thanks to Vinogradov Vyacheslav for the patch
- tcedisasm now outputs to filename.tpef.S by default.
- generate_cachegrind now uses line numbering and counts NOPs per
  instruction in case an assembly file is present as foobar.tpef.S.
- Generatebits prints out info about the imem usage and instruction compression
  with the verbose flag (-v).
- tcecc: added switches --bypass-distance, --bypass-distance-nodre and
  --no-kill-dead-results to control the software bypassing aggressiveness and
  the dead result elimination.
- explorer: added switch --compiler_options="XYZ" to pass XYZ to tcecc when 
  calling it from during exploration.

Usability features
------------------
- ProGe: Reasonable error message when implementation for some FU is invalid.

External interface changes
--------------------------
- OSAL.hh: removed RUNTIME_ERROR_WITH_DATA as it's a too specific helper
  for OSAL API. Let's keep it minimal and clean.

Documentation
-------------
- Documented the different "datapath connectivity levels" and 
  their support in TCE.
- Added an "Unsupported C Language Features"-section.
- Added and fixed documentation on the floating point TTA designs.
- Added some documentation about the dialog used to define operation operand
  bindings and timings to a function unit in ProDe.
- Added hints about avoiding the most common bottlenecks on TTA designs with
  the current TCE compiler.
- Added some documentation for the OpenCL support.

1.4       April 2011
====================

Notable new features
--------------------
- Support for LLVM 2.9.
  LLVM 2.7 and 2.8 unsupported but might still work, see below for known 
  problems.  We strongly recommend upgrading to LLVM 2.9.
- OpenCL Embedded compliant FPU implementations by Timo Viitanen / TUT
- Generic VHDL implementations for the basic streaming operations
  from Jani Boutellier / University of Oulu.
- ConnectionSweeper IC network exploration algorithm.
  Optimizes the IC network by sweeping the buses of the machine and 
  removing the least important connections first until a cycle count
  worsening threshold is reached. Tries to remove RF connections 
  first as they are usually more expensive than the bypass connections.
- Added --pareto_set switch to the explorer for printing pareto efficient
  configurations. Currently supports the connectivity and cycle count as
  the quality metrics.
- proge: IP-XACT support updated to version 1.5
- Added switch --print-resource-constraints to tcecc to assist in 
  deciding which resources to add to the machine to improve the
  schedule. Dumps DDGs to dot files along with dependence and
  resource constraint analysis data.

Code generator improvements
---------------------------
- Passes the first function parameter in register instead of stack.
- Uses negative guard more aggressively, less stupid guard xoring operations.
- Emulation pattern generation improved, can use immediates directly when
  using DAG to emulate missing operations.
- Some other minor pattern improvements leading to slightly better code
  on some situations.
- Alias analysis improvements, understands that register spills to stack
  cannot alias with other memory operations
- Software Bypasser is much more aggressive.

Optimizations
-------------
- tcecc: Decreased scheduling time.
- tcecc: Decreased memory usage.
- ttasim: Compiled simulation (-q) can correctly simulate machines with
  guard latency higher than 1. Simulating such machines no longer makes 
  the simulator revert to interpreting mode.

Smaller features
----------------
- tcecc: Reasonable error message if disk space runs out during TPEF writing.
- ttasim: Refuses to simulate a program that moves a too wide immediate to 
  a too narrow jump/PC port in the control unit. It would result in wrong
  execution as it jumps to a clipped address.
- ProDe: Scroll position is kept when zooming.
- ttasim: In case of memory access alignment error, prints the address.
- explore: the explorer can now reuse old architectures in the
  design space database (DSDB). Thus it's possible to speed up resumed
  explorations by using the DSDB from the previous exploration to
  get cycle counts from the DSDB instead of a new compile&simulation.
- Improved error handling caused by broken operation DAGs. Now sometimes
  gives reasonable error message instead of cryptic error message or crash
  when operation DAG has some error.
- tcecc: tceops.h is now included automatically, not necessary to
  include it explicitly.
- tcecc: added --emit-llvm switch for fully linked LLVM .bc output.

Bugfixes
--------
- ProDe: Shows the machine which is being edited immediately also with
  WxWidgets 2.8
- ProDe: When some editing command is cancelled, and nothing is changed, 
  the machine is not marked as modified so ProDe does not want to save it.
- ProDe: Copying FU from one machine to another no longer causes
  prode to crash. The address space of FU copied from one machine to
  another is left unset.
- ProDe: No longer asks the filename again when editing a adf file in
  current directory and saving it.
- ttasim: when the last instruction executed was a jump and the
  simulation was killed (reseted), the jump was executed in the 
  new simulation.
- ProGe: Some FUs had unnecessary 'SHIFTW' parameters in the default HDB
  causing broken top level VHDL to be generated. Fixed by Jani Boutellier of 
  University of Oulu.
- tcecc: Some missing patterns could cause internal compiler error while compiling.
- Missing operation behaviour file could cause simulator or osal tester to 
  fail. Now warning message is given and the .opp without corresponding .opb
  is ignored, if behaviour source file is found. If source file not found,
  the module is still loaded(assumes all operation executed via dag code)
- Trying to load machine which used same socket as source for multiple 
  register reads (either reads same register, or moves are guarded and
  always exclusive moves) might cause the simulation to hang.
- When a machine was fully RF connected but not fully connected
  (direct busses from all RF's to FU's and FU's to RF's, but all
  buses were not connected to all sockets) some registers were never used.
- If machine has SUBF operation but no NEGF operation, compiler could
  fail to compile code for the machine.
- Default OSEd.conf which may be broken on some machine no longer comes
  with TCE. This file is now autogenerated when OSEd is ran for first
  time, and the autogeneration should create a working one.
- ProGe: Stratix2DSP platform integrator now sets LD_LIBRARY_PATH to
  ALTERA_LIBRARY_PATH before calling qmegawiz as a workaround to 
  a problem where TCE was compiled against a different C++ library
  than the Quartus tools.
- handling for llvm's TRAP intrinsic was missing, and could cause
  compiler complain about missing "abort"-function and to fail.

Documentation
-------------
- Documented the use of OperationDAGs to describe operation semantics.
- Added example of using ConnectionSweeper and pareto_vis to visualize
  connectivity-wise interesting architectures.
- A tutorial on using the hardware FPUs provided by TCE.

Misc
----
- llvm-gcc support deprecated. Only Clang will work correctly with LLVM 2.9
  and TCE 1.4. llvm-gcc might still work with LLVM 2.7 and LLVM 2.8,
  but is unsupported.
- ABI change: Alignment rules for some data types changes when using
  LLVM 2.9. This means that old .o and .bc files have to be regenerated when 
  upgrading TCE from using llvm 2.7 or llvm 2.8 into llvm 2.9.

Known problems
--------------
No known problems with LLVM 2.9 and Clang. See below for the known 
problems in TCE 1.3 if you have to use an older LLVM for some reason.

1.3    November 2010
====================

Notable new features
--------------------
- Support for LLVM 2.8 (support for LLVM 2.7 retained)
- ttasim: call info (setting profile_transfer_tracking) and the instruction
  profile (ttasim setting profile_data_saving) are now saved to separate
  pure text files to speed up simulation when these traces are enabled.
- ttasim: instruction profile can be converted to cachegrind-compatible 
  traces which can be visualized with kcachegrind.
- SystemC integration: Possibility to add TTA simulation models to system
  level simulations with the ability to override the operation pipeline 
  simulation models for the function units.
- Improved the scheduling for unconnected machines through temporary
  register copies based on the maze algorithm for ASIC place & route.
  Not restricted to maximum of two copies anymore.
- Basic support for debugging info when compiled with 'tcecc -g'. 
  The source code line numbers are displayed as comments in 'tcedisasm' 
  output and ttasim's disassembly.
- Platform Integration support is improved. New integrator components
  include AvalonIntegrator which can be used to integrate TTA to a
  Altera SOPC Builder component and KoskiIntegrator which can be used
  to integrate TTA processor to Koski toolset compatible IP blocks with
  IP-XACT 1.2 component description file.

Code generator improvements
---------------------------
- New register assignment strategy that avoids reuse of registers to
  produce more ILP for the post-pass scheduler.
- Improved code generation for comparisons of boolean values.
- Avoids putting immediate value into register with some comparisons,
  more often passes the immediate directly to the comparison operation.

Usability features
------------------
- ProDe: when copying a load-store unit (FU), also copies the address 
  space parameter.

Bugfixes
--------
- tcecc: stdout/stderr redirection was broken for running subcommands
  and caused occasional false failures.
- tcecc: sometimes generated incorrect code when there was a jump to 
  llvm select instruction (usually c/c++ ?-operator).
- ttasim: In compiling mode value written to memory sometimes appeared
  to load operations triggered at same cycle. Those should read
  the old value from the memory.

Optimizations
-------------
- ttasim: destruction was extremely slow after simulating large
  programs due to extremely slow destructor of InstructionMemory
- tcecc: Decreased scheduling time.

Misc
----
- ttasim: removed support for simulating the experimental 'sequential
  TTA programs'. Sequential a.out programs was the intermediate representation 
  from the old (now unsupported) gcc 2.7.0 compiler frontend.

Known problems
--------------
- LLVM 2.8 has a bug which may cause incorrectly compiled programs when
  the is a comparison of (only) lowest bits of integers in the code 
  being compiled.
  A patch for this bug is included in TCE release, it should be applied
  to the LLVM source tree and LLVM recompiled and reinstalled with the patch.
  LLVM 2.7 might also be affected, but we have not seen the bug appear with
  LLVM 2.7.
- Clang has a bug related to code generation of bitfields, illegal
  code may be generated if the code contains bitfield and clang is used 
  as C frontend (which is the default). This bug appears with libmad.
  See http://llvm.org/bugs/show_bug.cgi?id=8171 for the bug report.
  
1.2    June 2010
================

New features
------------
- Support for LLVM 2.7 (dropped support for LLVM 2.6)
- Proper support for Clang. Clang now the default compiler frontend
  in tcecc.
- Preliminary support for automated platform integration. 
  First supported platform is the Stratix II DSP board.
- Added parameter --no-fp-emu to tcecc. This parameter disables 
  linking any floating point emulation code. It can be used to
  make the compiled program smaller in the case the dead code 
  elimination fails to remove unused FP code.
- Added parameter --conservative-pre-ra-scheduler which leads to 
  faster schedule with machines with low amount of registers but usually
  decreases performance with machines with lots of registers.

Bugfixes
--------
- sqrt() calls are now correctly converted to SQRTF operations
  only in case the operation is supported by the ADF, otherwise
  to emulation function calls.
- tcecc: compilation warnings and errors are now always output to
  stderr unbuffered (used to output only in case of compilation error)
- Data alignment rules of data types fixed to be same in backend
  and frontend. 
- Compiled simulation does not handle long guard latencies,
  implemented fallback to the interpreted engine when simulating 
  machines which have long guard latencies.
- Multi-bit registers can no longer be used as boolean registers by the 
  compiler; support for them was buggy and using them could cause incorrectly
  scheduled programs. Now every machine has to have at least 2 one-bit
  registers which are used for guards(predicates) and boolean values.

1.1 unreleased
==============

This version was never released as tar balls, but can be only 
checked out from the version control system.

New features
------------
- Support for LLVM 2.6 (dropped support for LLVM 2.5)
- Sign extension operations are not required anymore.
- Program Image Generator supports MIF-format (Memory
  Initialization File) used by Altera.
- ttasim-tandem: a tool for comparing the two simulation engines
  to assist in tracking simulation bugs.
- Operation code numbering guideline changed. Operation codes should be
  numbered according to the their alphabetical order. HDBEditor and ProGe
  issue a warning message if this convention is violated.
- tcecc: added a switch for setting the llvm-gcc optimization level
- Program Image Generator supports writing binary image to vhdl package
- Program Image Generator has (experimental) support for COE image files
- a helper script 'minimize-ic' for invoking the SimpleICOptimizer
  explorer plugin
- support for using the Clang as the C frontend via 'tcecc --clang'.
  NOTE: Clang 1.0 (released with LLVM 2.6) needs to be patched with
  tools/patches/clang-1.0-tce-support.patch for the TCE support.
- Utility programs to test that OSAL behaviour definitions and HDL
  implementations of function units are equal.
  - testhdb command line tool to test FU and RF implementations in HDB
  - ttaunittester to test the FUs and RFs implementations defined in IDF
- ProDe: when copying a bus, also copy its guards
- PIG now automatically copies memory images to ${proge-output}/tb directory
  if image type is ascii and -x flag is given.

Code optimizations
------------------
- Decreased scheduling time for big programs. 
  Unfortunately compiling time increased for small programs.
- Smarter heuristics for selecting which bus and FU to use, leads to
  programs which use fever connections, allowing more of them to be
  removed.
- Eliminates some stupid register to itself moves.

Bugfixes
--------
- rand() might now return something else than 0
- Scheduler could fail on machines with different short immediate widths
  and only some busses guarded.
- Random scheduler failures when software bypassing.
- Operations with state on machines with trigger bound to operand which is
  not last operand could be scheduled incorrectly.
- SimpleICOptimizer explorer plugin could remove connections that were used,
  resulting a machine where the code does not work.
- Instruction fetcher failed to fetch correct instruction when global lock
  signal was asserted.
- Better support for selecting custom ops with DAG definition.
- Having not operation on the machine caused incorrectly compiled programs.
- Better error handling for stale .opb files.
- Boost should not warn anymore about deprecated hash_set with gcc 4.3.
- Having lots of parallelism and easily analyzable memory addresses could
  cause incorrectly compiled programs.
- ttasim -q: could fail if some result is never read.
- ttasim -q: fixed wrong simulation of instructions with predicate moves
  and the same predicate written at the same cycle
- Simulator could fail to load some programs.
- Memory leak fixes.
- Toplevel busy signal now locks the core properly.
- Compiled simulator failed to simulate custom memory writing operations
  correctly.
- FU outputs are now updated when the compiled simulation is stopped to
  make the machine state correct for inspection.
- Avoids placing data at address 0 because it is indistinguishable from NULL.
- Operand type initialized correctly in osed operand editing dialog.
- Direct memory accesses to global tables could get wrong address.
- ProDe: segments cannot be selected anymore (selects the bus always instead),
  an irritating long standing bug.
- Proxim: crashed when unable the load the program due to missing
  operation simulation models.
- Missing .opb file no longer causes ttasim to go to forever loop,
  now exits with a meaningful error message.
- LIMM write to IU works if glock is issued on the same cycle
  
1.0 first public release, 2009-03-26
====================================

New features
------------
- Support for LLVM 2.5 (dropped support for LLVM 2.4).

Code optimizations
--------------------------
- Decreased scheduling time

Code generator improvements
----------------------------
- Creates slightly faster emulation code for comparison operations 
  which are missing from the machine.
- Improved schedule for reduced connectivity machines.

Bug fixes
---------
- Compiling simulator simulated some dag-specified operations incorrectly
  and sometimes failed to generate code to some.
- Fixed a bug which caused random scheduler failures.

1.0-beta2     2008-11-13
========================

New features
------------
- Support for LLVM 2.4 (dropped support for LLVM 2.3).
- Explorer can now print available plugins with "-g" option switch.
- Explorer can now print plugin parameters with "-p <plugin name>" switch.
- Simulator's x (dump memory) command can now dump memory to a binary file
  with switch /f
- Added --unroll-threshold switch to tcecc to control the aggressiveness
  of the loop unrolling.

Code optimizations
------------------
- Optimized the time spent in loading of program to the simulator.
- Optimized the time to write program to tpef file.
- Scheduling big programs should be much faster.
- Scheduler memory usage should be less

Bug fixes
---------
- Fixed a bug which caused random scheduler failures.
- Dropped support for Boost 1.32 as it has some bad bugs, at least 1.33 required
- ProDe: crash when "fully connecting" unconnected RF ports fixed. 
- The compiler backend plugins now contain the TCE version string in
  the file name to avoid problems with incompatible backend versions
  in TCE version upgrades.
- custom operation sometimes got reordered illegally.

Documentation
-------------
- Added proper documentation on marking the state properties of
  operations sharing the same state (side-effects, affected-by, affects)
  to the user manual.

1.0-beta1     2008-10-02
========================

New features
------------

- Upgraded the compiler to use LLVM 2.3 (support for LLVM 2.2 dropped).
- Added support for FU resource conflict detection to the compiled
  simulator engine.
- Implemented processor utilization stats to the compiled simulator
  engine.
- Added 'clocked' attribute to the operation definitions that depend
  on the processor clock signal (mainly real time clocks etc.).
- Added example stream operations to the base opset and documented them in
  the TCE User Manual's tutorial section.
- Constant support for the OSAL DAG language.
- Added support for dynamic compiled simulation. Static compiled simulation
  is still used by default.
- Fixed TCE to compile and pass tests with Ubuntu 6.06 LTS (Dapper).
- Lots of work on automatic and manual design space exploration tools.
- New sequential scheduler which minimizes scheduling time and helps
  to isolate compilation bugs between LLVM and TCE. 
  Invoke with 'tcecc -O0'.
- SimpleICOptimizer Explorer plugin now has a switch to preserve the minimal
  opset.
- Evaluate Explorer plugin added to easily evaluate configurations.
- MinimalOpSet Explorer plugin added to check machines against the minimal
  opset.

Bug fixes
---------
- Workaround for an ICE that happened with LLVM-GCC inlining.
- Bug #14: Tcl 8.5 has a problem with stack size detection which caused Proxim's
  script interpreter to fail (see Bug #14). Removed support for Tcl 8.5 for
  now. Use Tcl 8.0-8.4 until Tcl 8.5 has fixed this issue properly.
- Bug #35: add explicit casts to the OSAL operand types in the _TCE_*()
  macros generated by tceopgen
- Fixed a bug when generating code for guarded jumps in compiled
  simulator.
- Determinism fixes to the instruction scheduler.  
- Optimized scheduling of long immediates. Speeds up scheduling up to
  50% for some cases.
- Got rid of compile warnings on Ubuntu 8.10 (Intrepid Ibex).

1.0-alpha1    2008-05-06
========================

The first preview release for co-op universities and companies.
