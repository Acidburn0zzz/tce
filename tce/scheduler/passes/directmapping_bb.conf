<scheduler-configuration>

<!-- 

    To be used with the new frontend.

    Uses directmapping allocator and BB scheduler.
-->

    <!-- 

    Allocate registers as a prepass using the direct mapping register
    allocator algorithm.

    -->
	<pass>
		<module>
			<name>DirectMappingRegisterAllocator</name>
			<file>SequentialFirstFitResourceMapper/DirectMappingRegisterAllocator.so</file>
		</module>
	</pass>

    <!--
    Elementary guard allocator. Is able to only predicate using a single
    global boolean (predicate) register.

    Future versions should use guards (and predicated execution) more
    efficiently.
    -->
	<pass>
		<module>
			<name>SimpleGuardAllocatorPass</name>
			<file>LinearScanAllocator/SimpleGuardAllocatorPass.so</file>
		</module>
	</pass>

    <!--
    Address space mapper. maps addresspace to address space of target machine.
    -->

	<pass>
		<module>
			<name>AddressSpaceMapperPass</name>
			<file>LinearScanAllocator/AddressSpaceMapperPass.so</file>
		</module>
	</pass>

    <!--
    The basic block scheduler algorithm. 
    -->
	<pass>
		<module>
			<name>BasicBlockSchedulerPass</name>
			<file>BasicBlockScheduler/BasicBlockSchedulerPass.so</file>
		</module>
        <!-- Bypasser given as helper module -->
		<module>
			<name>CLBBypasserModule</name>
			<file>BasicBlockScheduler/CLBBypasserModule.so</file>
		</module>
    	<!-- Delay slot filler -->
	    <module>
			<name>CopyingDSFillerModule</name>
			<file>BasicBlockScheduler/CopyingDSFillerModule.so</file>
		</module>

	</pass>
</scheduler-configuration>
