<!-- 

    Experimental compiler backend algorithm chain configuration for TCE. 

    Represents the compiler backend algorithm chain currently under
    development, which might not yet pass the scheduler test bench. 
    This configuration file always holds the "next generation" algorithm
    which is moved to default_scheduler.conf after finished and proved
    stable enough.
-->

<scheduler-configuration>

    <!-- 

    Generate annotations from old stack code. 

    -->
	<pass>
		<module>
			<name>OldFrontendStackAnalyzerPass</name>
			<file>LinearScanAllocator/OldFrontendStackAnalyzerPass.so</file>
		</module>
	</pass>


    <!-- 

    Allocate registers as a prepass using the linear scan register
    allocator algorithm.

    The pass also generates all stack handling code (spills, context save,
    argument passing, etc.). 

    -->
	<pass>
		<module>
			<name>LinearScanAllocatorPass</name>
			<file>LinearScanAllocator/LinearScanAllocatorPass.so</file>
		</module>
	</pass>

    <!--
    Elementary guard allocator. Is able to only predicate using a single
    global boolean (predicate) register.

    Future versions should use guards (and predicated execution) more
    efficiently.
    -->
	<pass>
		<module>
			<name>SimpleGuardAllocatorPass</name>
			<file>LinearScanAllocator/SimpleGuardAllocatorPass.so</file>
		</module>
	</pass>

    <!--
    Address space mapper. maps addresspace to address space of target machine.
    -->

	<pass>
		<module>
			<name>AddressSpaceMapperPass</name>
			<file>LinearScanAllocator/AddressSpaceMapperPass.so</file>
		</module>
	</pass>

    <!--
    The basic block scheduler algorithm. 
    -->
	<pass>
		<module>
			<name>BasicBlockSchedulerPass</name>
			<file>BasicBlockScheduler/BasicBlockSchedulerPass.so</file>
		</module>
	</pass>
</scheduler-configuration>
