<!-- 

    Sequential compiler backend algorithm chain configuration for TCE. 

    Represents a simple compiler backend algorithm chain used to debug
    miscompilations with the default configuration. If the program schedules 
    correctly with this conf but not with the default conf, the scheduling algorithm 
    is probably broken, otherwise, the register allocator is probably broken.

-->

<scheduler-configuration>

    <!-- 

    Creates annotations from old stack code.

    -->

    <pass>
        <module>
            <name>OldFrontendStackAnalyzerPass</name>
            <file>LinearScanAllocator/OldFrontendStackAnalyzerPass.so</file>
        </module>
    </pass>

    <!-- 

    Allocate registers as a prepass using the linear scan register
    allocator algorithm.

    The pass also generates all stack handling code (spills, context save,
    argument passing, etc.). 

    -->
	<pass>
		<module>
			<name>LinearScanAllocatorPass</name>
			<file>LinearScanAllocator/LinearScanAllocatorPass.so</file>
		</module>
	</pass>


    <!--
    Elementary guard allocator. Is able to only predicate using a single
    global boolean (predicate) register.

    Future versions should use guards (and predicated execution) more
    efficiently.
    -->
	<pass>
		<module>
			<name>SimpleGuardAllocatorPass</name>
			<file>LinearScanAllocator/SimpleGuardAllocatorPass.so</file>
		</module>
	</pass>

    <!--
    Address space mapper. maps addresspace to address space of target machine.
    -->

    <pass>
        <module>
            <name>AddressSpaceMapperPass</name>
            <file>LinearScanAllocator/AddressSpaceMapperPass.so</file>
        </module>
    </pass>

    <!--
    The actual scheduler algorithm. Just maps moves 1:1 to the target machine,
    thus fails if the target lacks resources.

    Will be replaced with actual scheduling algorithm as soon as one is
    working ;-)
    -->
	<pass>
		<module>
			<name>SequentialSchedulerModule</name>
			<file>SequentialScheduler/SequentialSchedulerModule.so</file>
		</module>
	</pass>
</scheduler-configuration>
