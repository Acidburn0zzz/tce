/*
    Copyright 2002-2008 Tampere University of Technology.  All Rights
    Reserved.

    This file is part of TTA-Based Codesign Environment (TCE).

    TCE is free software; you can redistribute it and/or modify it under the
    terms of the GNU General Public License version 2 as published by the Free
    Software Foundation.

    TCE is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along
    with TCE; if not, write to the Free Software Foundation, Inc., 51 Franklin
    St, Fifth Floor, Boston, MA  02110-1301  USA

    As a special exception, you may use this file as part of a free software
    library without restriction.  Specifically, if other files instantiate
    templates or use macros or inline functions from this file, or you compile
    this file and link it with other files to produce an executable, this
    file does not by itself cause the resulting executable to be covered by
    the GNU General Public License.  This exception does not however
    invalidate any other reasons why the executable file might be covered by
    the GNU General Public License.
*/
/**
 * @file CostEstimationData.icc
 *
 * Inline implementation of CostEstimationData class.
 *
 * @author Veli-Pekka J‰‰skel‰inen 2006 (vjaaskel@cs.tut.fi)
 * @note rating: red
 */

/**
 * Sets the cost estimation data name.
 *
 * @param name Name of the data.
 */
inline void
CostEstimationData::setName(const std::string& name) {
    name_ = name;
    hasName_ = true;
}

/**
 * Returns true if the name attribute is set.
 *
 * @return True, if the name attribute is set.
 */
inline bool
CostEstimationData::hasName() const {
    return hasName_;
}
    

/**
 * Sets the cost estimation data value.
 *
 * @param name Value of the data.
 */
inline void
CostEstimationData::setValue(const DataObject& value) {
    value_ = value;
    hasValue_ = true;
}


/**
 * Returns true if the value attribute is set.
 *
 * @return True, if the value attribute is set.
 */
inline bool
CostEstimationData::hasValue() const {
    return hasValue_;
}


/**
 * Sets the FU reference
 *
 * @param fuEntryID ID of the FU entry.
 */
inline void
CostEstimationData::setFUReference(RowID fuEntryID) {
    fuReference_ = fuEntryID;
    hasFUReference_ = true;
}


/**
 * Returns true if the data references an FU Entry.
 *
 * @return True, if the data references an FU entry.
 */
inline bool
CostEstimationData::hasFUReference() const {
    return hasFUReference_;
}


/**
 * Sets the RF reference
 *
 * @param rfEntryID ID of the RF entry.
 */
inline void
CostEstimationData::setRFReference(RowID rfEntryID) {
    rfReference_ = rfEntryID;
    hasRFReference_ = true;
}


/**
 * Returns true if the data references an RF Entry.
 *
 * @return True, if the data references an RF entry.
 */
inline bool
CostEstimationData::hasRFReference() const {
    return hasRFReference_;
}

/**
 * Sets the socket reference
 *
 * @param socketEntryID ID of the socket entry.
 */
inline void
CostEstimationData::setSocketReference(RowID socketEntryID) {
    socketReference_ = socketEntryID;
    hasSocketReference_ = true;
}


/**
 * Returns true if the data references an socket Entry.
 *
 * @return True, if the data references an socketentry.
 */
inline bool
CostEstimationData::hasSocketReference() const {
    return hasSocketReference_;
}

/**
 * Sets the bus reference
 *
 * @param busEntryID ID of the bus entry.
 */
inline void
CostEstimationData::setBusReference(RowID busEntryID) {
    busReference_ = busEntryID;
    hasBusReference_ = true;
}


/**
 * Returns true if the data references an bus Entry.
 *
 * @return True, if the data references an busentry.
 */
inline bool
CostEstimationData::hasBusReference() const {
    return hasBusReference_;
}

/**
 * Sets the data plugin.
 *
 * @param pluginID ID of the cost function plugin.
 */
inline void
CostEstimationData::setPluginID(RowID pluginID) {
    pluginID_ = pluginID;
    hasPluginID_ = true;
}


/**
 * Returns true if the data has a plugin ID set.
 *
 * @return True, if the data has a plugin ID set.
 */
inline bool
CostEstimationData::hasPluginID() const {
    return hasPluginID_;
}
