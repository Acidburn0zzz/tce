/*
    Copyright 2002-2008 Tampere University of Technology.  All Rights
    Reserved.

    This file is part of TTA-Based Codesign Environment (TCE).

    TCE is free software; you can redistribute it and/or modify it under the
    terms of the GNU General Public License version 2 as published by the Free
    Software Foundation.

    TCE is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along
    with TCE; if not, write to the Free Software Foundation, Inc., 51 Franklin
    St, Fifth Floor, Boston, MA  02110-1301  USA

    As a special exception, you may use this file as part of a free software
    library without restriction.  Specifically, if other files instantiate
    templates or use macros or inline functions from this file, or you compile
    this file and link it with other files to produce an executable, this
    file does not by itself cause the resulting executable to be covered by
    the GNU General Public License.  This exception does not however
    invalidate any other reasons why the executable file might be covered by
    the GNU General Public License.
*/
/**
 * @file EditPart.hh
 *
 * Declaration of EditPart class.
 *
 * @author Ari Metsähalme 2003 (ari.metsahalme-no.spam-tut.fi)
 * @note rating: yellow
 * @note reviewed Jul 13 2004 by vpj, ll, jn, am
 */

#ifndef TTA_EDIT_PART_HH
#define TTA_EDIT_PART_HH

#include <vector>
#include <set>

class Figure;
class wxPoint;
class EditPolicy;
class Request;
class ComponentCommand;

namespace TTAMachine {
    class MachinePart;
}

/**
 * Connects a model object to a graphical object on the canvas.
 *
 * An EditPart receives Requests generated by user actions and
 * converts them to possible changes in the model (Commands) using its
 * EditPolicies. EditParts can contain other EditParts as children.
 * Every EditPart has a Figure.
 */
class EditPart {
public:
    EditPart();
    virtual ~EditPart();

    void putGarbage(std::set<EditPart*>& trashbag);
    EditPart* parent() const;
    void setParent(EditPart* parent);
    TTAMachine::MachinePart* model() const;
    void setModel(TTAMachine::MachinePart* model);
    Figure* figure() const;
    void setFigure(Figure* figure);
    EditPart* find(wxPoint point);
    EditPart* find(const TTAMachine::MachinePart* model);
    bool selectable() const;
    bool selected() const;
    void setSelectable(bool selectable);
    void setSelected(bool select);
    void installEditPolicy(EditPolicy* editpolicy);
    void addChild(EditPart* child);
    int childCount() const ;
    EditPart* child(unsigned int index) const;
    ComponentCommand* performRequest(Request* request) const;
    bool canHandle(Request* request) const;

protected:
    /// Parent of this EditPart.
    EditPart* parent_;
    /// Figure of this EditPart.
    Figure* figure_;
    /// Machine component corresponding to this EditPart.
    TTAMachine::MachinePart* model_;
    /// Tells whether the EditPart is selectable or not.
    bool selectable_;
    /// Tells whether the EditPart is selected or not.
    bool selected_;

    /// Helper member to prevent improper deletion.
    bool garbageCollected_;

    /// List of supported EditPolicies.
    std::vector<EditPolicy*> editPolicies_;
    /// List of children EditParts.
    std::vector<EditPart*> children_;

private:
    /// Assignment not allowed.
    EditPart& operator=(EditPart& old);
    /// Copying not allowed.
    EditPart(EditPart& old);
};

#include "EditPart.icc"

#endif
