/**
 * @file GraphNode.hh
 *
 * Prototype of graph-based program representation: declaration of graph
 * node.
 *
 * @author Vladimir Guzma 2006 (vladimir.guzma@tut.fi)
 * @note rating: red
 */

#ifndef TTA_GRAPH_NODE_HH
#define TTA_GRAPH_NODE_HH

#include <string>

/**
 * Node of the graph-based program representation.
 */
class GraphNode {
public:
    // Client may give specific id. Those ID's must be unique.
    GraphNode(int nodeID) : nodeID_(nodeID) {}
    // Node id is autogenerated on this constructor
    GraphNode();
    virtual ~GraphNode();

    virtual GraphNode* clone() const;

    virtual int nodeID() const;
    virtual std::string toString() const;
    virtual std::string dotString() const;

    class Comparator {
    public:
        bool operator()(const GraphNode* gn1, const GraphNode* gn2) const;
    };
private:
    int nodeID_;
    static int idCounter_;
};

#endif
