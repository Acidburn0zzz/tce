/*
    Copyright 2002-2008 Tampere University of Technology.  All Rights
    Reserved.

    This file is part of TTA-Based Codesign Environment (TCE).

    TCE is free software; you can redistribute it and/or modify it under the
    terms of the GNU General Public License version 2 as published by the Free
    Software Foundation.

    TCE is distributed in the hope that it will be useful, but WITHOUT ANY
    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
    FOR A PARTICULAR PURPOSE.  See the GNU General Public License for more
    details.

    You should have received a copy of the GNU General Public License along
    with TCE; if not, write to the Free Software Foundation, Inc., 51 Franklin
    St, Fifth Floor, Boston, MA  02110-1301  USA

    As a special exception, you may use this file as part of a free software
    library without restriction.  Specifically, if other files instantiate
    templates or use macros or inline functions from this file, or you compile
    this file and link it with other files to produce an executable, this
    file does not by itself cause the resulting executable to be covered by
    the GNU General Public License.  This exception does not however
    invalidate any other reasons why the executable file might be covered by
    the GNU General Public License.
*/
/**
 * @file ResourceElement.icc
 *
 * Inline definitions of ResourceElement class.
 *
 * @author Mikael Lepistö 2003 (tmlepist-no.spam-cs.tut.fi)
 *
 * @note rating: yellow
 */

namespace TPEF {

/**
 * Returns type of the resource.
 *
 * @return Type of the resource.
 */
inline ResourceElement::ResourceType
ResourceElement::type() const {
    return type_;
}
    
/**
 * Sets type of the resource.
 *
 * @param Type of the resource.
 */
inline void
ResourceElement::setType(ResourceType aType) {
    type_ = aType;
}
    
/**
 * Returns unique identification code of the resource.
 *
 * @return Identification code.
 */
inline HalfWord
ResourceElement::id() const {
    return id_;
}

/**
 * Sets the identification code field.
 *
 * @param aId Identification numerical code to set.
 */
inline void
ResourceElement::setId(HalfWord aId) {
    id_ = aId;
}

/**
 * Returns info of the resource.
 *
 * @return Info of the resource.
 */
inline Word
ResourceElement::info() const {
    return info_;
}

/**
 * Sets info field.
 *
 * @param aInfo Info to set.
 */
inline void
ResourceElement::setInfo(Word aInfo) {
    info_ = aInfo;
}

/**
 * Returns name of the element.
 *
 * @return Name of the element.
 */
inline Chunk*
ResourceElement::name() const {
    return dynamic_cast<Chunk*>(name_->pointer());
}

/**
 * Sets name for the resource.
 *
 * @param aName Name for the resource.
 */
inline void
ResourceElement::setName(ReferenceManager::SafePointer* aName) {
    name_ = aName;
}


/**
 * Sets name for the resource.
 *
 * @param aName Name for resource.
 */
inline void
ResourceElement::setName(Chunk* aName) {
    name_ = ReferenceManager::SafePointer::replaceReference(name_, aName);
}

}
