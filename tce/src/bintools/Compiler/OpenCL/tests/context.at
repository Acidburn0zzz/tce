AT_SETUP([context data is passed to internal functions])

AT_DATA([main.c],[
#include <stdio.h>

void f(char *s, int i);

int main(int argc, char *argv[[]]) {
    char s[[]] = "OK\n";

    f(1, s);

    return 0;
}

void g(char *s) {
    printf(s);
}
])

AT_DATA([context.c],[
void g(void);

void f(int i) {
    if (i)
        g();
}
])

$LLVMCC $LLVMCFLAGS -c --emit-llvm main.c
$LLVMCC $LLVMCFLAGS -c --emit-llvm context.c
AT_CHECK([opt -load=$abs_top_builddir/lib/.libs/llvmopencl.so -add-context \
          context.o -o opencl_context.o])
AT_CHECK([llvm-link -o test.o main.o opencl_context.o])
AT_CHECK([lli test.o], 0, [OK
])

AT_CLEANUP

#-------------------------------------------------------------------------------

AT_SETUP([external functions are not added context])

AT_DATA([main.c],[
void f(char *s, int i);

int main(int argc, char *argv[[]]) {
    char s[[]] = "KO";

    f(s, 1);

    return 0;
}
])

AT_DATA([context.c],[
#include <stdio.h>

void f(int i) {
    if (i)
        puts("OK");
}
])

$LLVMCC $LLVMCFLAGS -c --emit-llvm main.c
$LLVMCC $LLVMCFLAGS -c --emit-llvm context.c
AT_CHECK([opt -load=$abs_top_builddir/lib/.libs/llvmopencl.so -add-context \
          -external-functions=puts context.o -o opencl_context.o])
AT_CHECK([llvm-link -o test.o main.o opencl_context.o])
AT_CHECK([lli test.o], 0, [OK
])

AT_CLEANUP