/**
 * @file HDBEditorAboutDialog.cc
 * 
 * Definition of HDBEditorAboutDialog class.
 * 
 * @author Veli-Pekka J‰‰skel‰inen 2005 (vjaaskel@cs.tut.fi)
 * @note rating: red
 */

#include "HDBEditorAboutDialog.hh"
#include "config.h"
#include "WxConversion.hh"
#include "HDBEditorConstants.hh"

/**
 * The Constructor.
 * 
 * @param parent Parent window of the dialog.
 */
HDBEditorAboutDialog::HDBEditorAboutDialog(wxWindow* parent):
    wxDialog(parent, -1, _T("About HDB Editor"), wxDefaultPosition) {

    createContents(this, true, true);
    dynamic_cast<wxStaticText*>(FindWindow(ID_TEXT_PROGRAM_VERSION))->SetLabel(
        _T("TCE ") + WxConversion::toWxString(VERSION));
}

/**
 * The Destructor.
 */
HDBEditorAboutDialog::~HDBEditorAboutDialog() {
}


/**
 * Creates contents of the dialog window. Code generated by wxDesigner.
 * 
 * @param parent Parent dialog of the contents.
 * @param call_fit If true, fits sizer in dialog window.
 * @param set_sizer If true, sets sizer as dialog's sizer.
 * @return Top level sizer of the contents.
 */ 
wxSizer*
HDBEditorAboutDialog::createContents(
    wxWindow *parent, bool call_fit, bool set_sizer) {

    wxBoxSizer *item0 = new wxBoxSizer( wxVERTICAL );

    item0->Add( 20, 20, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item1 = new wxStaticText( parent, ID_TEXT_PROGRAM_NAME, wxT("HDB Editor"), wxDefaultPosition, wxDefaultSize, 0 );
    item1->SetFont( wxFont( 25, wxROMAN, wxNORMAL, wxNORMAL ) );
    item0->Add( item1, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticText *item2 = new wxStaticText( parent, ID_TEXT_PROGRAM_VERSION, wxT("Version ?.??"), wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item2, 0, wxALIGN_CENTER|wxALL, 5 );
    
    wxStaticText *item3 = new wxStaticText( parent, ID_TEXT_PROGRAM_COPYRIGHT, HDBEditorConstants::HDB_EDITOR_COPYRIGHT, 
                                            wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item3, 0, wxALIGN_CENTER|wxALL, 5 );

    item0->Add( 20, 20, 0, wxALIGN_CENTER|wxALL, 5 );

    wxStaticLine *item4 = new wxStaticLine( parent, ID_LINE, wxDefaultPosition, wxSize(200,-1), wxLI_HORIZONTAL );
    item0->Add( item4, 0, wxGROW|wxALIGN_CENTER_VERTICAL|wxALL, 5 );

    wxButton *item5 = new wxButton( parent, wxID_OK, wxT("OK"), wxDefaultPosition, wxDefaultSize, 0 );
    item0->Add( item5, 0, wxALIGN_CENTER|wxALL, 5 );

    if (set_sizer)
    {
        parent->SetSizer( item0 );
        if (call_fit)
            item0->SetSizeHints( parent );
    }
    
    return item0;
}
