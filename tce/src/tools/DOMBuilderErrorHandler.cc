/**
 * @file DOMBuilderErrorHandler.cc
 *
 * Implementation of DOMBuilderErrorHandler class.
 *
 * @author Lasse Laasonen 2004 (lasse.laasonen@tut.fi)
 */

#include <xercesc/dom/DOMLocator.hpp>

#include "DOMBuilderErrorHandler.hh"
#include "Conversion.hh"

using std::string;

/**
 * Constructor.
 */
DOMBuilderErrorHandler::DOMBuilderErrorHandler() :
    errorCount_(0), errorLog_("") {
}


/**
 * Destructor.
 */
DOMBuilderErrorHandler::~DOMBuilderErrorHandler() {
}


/**
 * Handler function to process errors that occur while building DOM
 * documents.
 *
 * Stores information to locate the error (URI, line number, column,
 * diagnostic message) passed by a DOM builder to an error log.  Called by
 * DOMBuilder::parseURI.
 *
 * @param domError Error generated by DOM builder.
 * @return Always Boolean value 'true'.
 */
bool
DOMBuilderErrorHandler::handleError(const DOMError& domError) {

    errorCount_++;
    DOMLocator* locator = domError.getLocation();

    errorLog_ += "Error at file ";
    errorLog_ += Conversion::XMLChToString(locator->getURI());
    errorLog_ += ", line ";
    errorLog_ += Conversion::toString(locator->getLineNumber());
    errorLog_ += ", column ";
    errorLog_ += Conversion::toString(locator->getColumnNumber());
    errorLog_ += "\n    Message: ";
    errorLog_ += Conversion::XMLChToString(domError.getMessage());
    errorLog_ += "\n";

    return true;
}


/**
 * Returns the number of errors handled.
 *
 * @return Number of errors handled.
 */
int
DOMBuilderErrorHandler::errorCount() const {
    return errorCount_;
}


/**
 * Returns the error log.
 *
 * @return The error log.
 */
string
DOMBuilderErrorHandler::errorLog() const {
    return errorLog_;
}
